MOON NOTESLunar Cycle: 29.53059 days The moon orbits the Earth 13.3687462502 times per Earth yearWe shall pretend this means the moon rises and sets based on the turning of the Earth (i.e., 12 hours) with an offset.  Let's call the moon's rotation a bit fast (by about 2.275207) so this makes a day about 21.724793.  So moonrise and moonset are offset: 10.862396 hoursI admit we're making most of these numbers up.We'll use the environmental timer (run by a minutely cronjob) the same way that we drive the sunrise/sunset calculator.We'll also run moon() the same way we do ictime().  It will include fullness, brightness and position in the sky.Uses the function ictime() in two manners:	ictime(seconds) = secs()	ictime(seconds=<value>) = secs() + <value> hours (timezone shift)	ictime(convsecs=<value>) = convsecs(<value>)--------------------&f_moon #129=@@ The Main Function.ifelse(	%0, @@ ictime(<stuff>)@@ Go down the list, evaluate those you know, return as a |-deliniated list@@ Return #-1 at those you don't know.@@ Allow passing of values via '<funct>=<val>'	iter(		%0, 		ifelse(			hasattr(parent(me), f_moon-[before(##, =)]), 			u(f_moon-[before(##, =)], [after(##, =)]), 			#-1		), 		, |	), @@ moon() -- default	u(f_moon-default))--&f_moon #129=ifelse(%0, iter(%0, ifelse(hasattr(parent(me), f_moon-[before(##, =)]), u(f_moon-[before(##, =)], [after(##, =)]), #-1), , |), u(f_moon-default))--&d_moon-switch #129=/privileged/preserve--------------------@@ Default: Moon Phase@@ Calls f_moon-phase-percent and converts to a word value.@@ Assume 0% as middle of New@@ Returns: New, Crescent Waxing, First Quarter, Gibbous Waxing, Full, @@ Gibbous Waning, Last Quarter, Crescent Waning and DARK FULL@@ ("dark full" was for a fantasy game)&f_moon-default #209=	switch(		round(fdiv(u(f_moon-year-percent), 12.5), 0), 		0, New, 		1, Waxing_Crescent, 		2, Waxing_Half, 		3, Waxing_Gibbous, @@ Every fourth full moon is Dark.@@ That is, every 10205771.902 IC seconds.@@ If we find the percentage, divide into fourths, mod by 4, 0 is a Dark Moon		4, 		[ifelse(			mod(				round(					mul(						fdiv(mod(ictime(seconds), 10205771.904), 10205771.902), 						4					), 					0				), 				4			), 			,			Dark_		)]		Full, @@ We continue		5, Waning_Gibbous, 		6, Waning_Half, 		7, Waning_Crescent, 		8, New, 		Unknown Error	)---&f_moon-default #209=switch(round(fdiv(u(f_moon-year-percent), 12.5), 0), 0, New, 1, Waxing_Crescent, 2, Waxing_Half, 3, Waxing_Gibbous, 4, [ifelse(mod(round(mul(fdiv(mod(ictime(seconds), 10205771.904), 10205771.902), 4), 0), 4), ,Dark_)]Full, 5, Waning_Gibbous, 6, Waning_Half, 7, Waning_Crescent, 8, New, Unknown Error)--------------------@@ Lunar Year by Percent@@ One lunar year every 2551442.976 seconds.  Let's round that to 2551443@@ Result: Percent of year phase so far.@@ Requires: ictime(seconds)&f_moon-year-percent #209=	mul(		fdiv(			mod(				ictime(seconds), 				2551443			), 			2551443		), 		100	)---&f_moon-year-percent #209=mul(fdiv(mod(ictime(seconds), 2551443), 2551443), 100)--------------------&f_moon-what #209=@@ What's available on me?iter(	lattr(#209/f_moon-*), 	lcstr(after(##, -)))--&f_moon-what #209=iter(lattr(#209/f_moon-*), lcstr(after(##, -)))--------------------&f_moon-when #209=@@ When is moonrise/moonset?@@ Moon has a 21.724793 hour (78209.2548 second) cycle@@ If Moonrise is at 0, Moonset is at cycle/2 or 39104.6274 seconds.@@ So, that said, we want this moonrise if we're less than halfway thru@@ We want the next moonrise if we're more than halfway thru.@@ Then add 39104.6274 seconds to find moonset.@@ Then convert.@@ fdiv(mod(ictime(seconds), 78209.2548), 78209.2548) : Percent of Cycle@@ 0 : Moonrise, 0 < x > .50 : Moon is Up, .50 : Moonset, x > .50 : Moon is Down  @@ 0: +/- number of cycles to check (-1 = last cycle, 0 = this cycle)@@ q0: Percent of cycle (0.0 - 1.0)@@ q1: Offset in seconds from beginning of cycle@@ q2: IC Seconds +/- Cycles@@ q3: Moonrise in Seconds@@ q4: Moonset in Seconds@@ Requires: ictime(convsecs=<seconds>)@@ Output: moonrise~moonset@@ PREPARE A BUNCH OF INFORMATION	[setq(		0, 		fdiv(			setr(				1, 				mod(@@ Offset moon(when=<cycle offset>) and since one cycle is 21.7 hours...					setr(2, ictime(seconds=[mul(%0, 21.724793)])), 					78209.2548				)			), 			78209.2548		)	)]@@ FIGURE WHICH OF WHAT WE WANT	[ifelse(		lte(%q0, .5), @@ Moon is Up -- Return Current Rise/Set -- IC Seconds - Offset		setq(3, sub(%q2, %q1)), @@ Moon is Down -- Return Next Rise/Set -- IC Seconds + (78209.2548 - Offset)		setq(3, add(%q2, 78209.2548, -%q1))	)]@@ MOONSET == MOONRISE + 1/2 CYCLE	[setq(4, add(%q3, fdiv(78209.2548, 2)))]@@ OUTPUT 	[ictime(convsecs=%q3)]~[ictime(convsecs=%q4)]--&f_moon-when #209=[setq(0, fdiv(setr(1, mod(setr(2, ictime(seconds=[mul(%0, 21.724793)])), 78209.2548)), 78209.2548))][ifelse(lte(%q0, .5), setq(3, sub(%q2, %q1)), setq(3, add(%q2, 78209.2548, -%q1)))][setq(4, add(%q3, fdiv(78209.2548, 2)))][ictime(convsecs=%q3)]~[ictime(convsecs=%q4)]--------------------&f_moon-moontime #209=@@ Is the moon Up or Down?  Like ictime(daytime)@@ Up, Down, Moonrise, Moonset@@ fdiv(mod(ictime(seconds), 78209.2548), 78209.2548) : Percent of Cycle@@ less than 0.05 : Moonrise@@ 0.05 to 0.45 : Moon is Up@@ 0.45 to 0.51 : Moonset@@ 0.51 to 0.98 : Moon is Down@@ greater than 0.98 : Moonrise  	[setq(0, fdiv(mod(ictime(seconds), 78209.2548), 78209.2548))]	[case(		1, 		lt(%q0, 0.05), Moonrise, 		and(gte(%q0, 0.05), lte(%q0, 0.45)), Up, 		and(gt(%q0, 0.45), lt(%q0, 0.51)), Moonset, 		and(gte(%q0, 0.51), lte(%q0, 0.98)), Down,		gt(%q0, 0.98), Moonrise,		Confused Moontime	)]--&f_moon-moontime #209=[setq(0, fdiv(mod(ictime(seconds), 78209.2548), 78209.2548))][case(1, lt(%q0, 0.05), Moonrise, and(gte(%q0, 0.05), lte(%q0, 0.45)), Up, and(gt(%q0, 0.45), lt(%q0, 0.51)), Moonset, and(gte(%q0, 0.51), lte(%q0, 0.98)), Down, gt(%q0, 0.98), Moonrise, Confused Moontime)]--------------------HELP FILE&help_moon() #489=functions~moon() - functions about the moon~%b Format: moon(%[<options>%])%r%r%b Without an option, this function will return the current phase of the%r%b moon in game time.  Options may be entered as a single item or a list.%r%b Results will be returned as a |-delimited list.  Options are:%r%r%b default: Return the current phase of the moon%r%b year-percent: Return the percentage of the lunar year (from full)%r%b when: Return moonrise/moonset (or the next if the moon has set)%r%b when=<n>: Where <n> is number of rise/set cycles, return the times for a%r%b %b %b previous (if negative) or upcoming (if positive) cycle%r%b moontime: If the moon is up, down, in the process of moonrise or moonset%r%b what: List of options (like this one)%r%r%b See Also: +help ictime()F_MOONRISE-MOONSET: @switch not(comp(ictime(daytime), v(d_daytimer-last)))=0, {&d_daytimer-last me=[ictime(daytime)]; @switch v(d_daytimer-last)=Dawn, @wall/emit/no %xh%xyThe sky lightens. The sun rises.%xn, Sunset, @wall/emit/no %xh%xcThe sun slowly sinks below the horizon.%xn}