================================================================================
== DISPLAY HANGOUTS ============================================================

List one hangout at a time in a list.

         1111111111          3333333333          5555555555          7777777777 
12345678901234567890123456789012345678901234567890123456789012345678901234567890
       Name                                                 Info?  Pop.
(xxxx) xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx (#xxxxxx)   Y    999 
(xxxx) xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx (#xxxxxx)        999  <Night>
(xxxx) xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx             Y    999  <Day>
(xxxx) xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx                  999 


0: u( f.rank-hangouts )
1: 1 if 'all'
2: dbref of enactor (%#)
q0: dbref of main hangout
q1: complete attribute of hangout
ql: maploc length
qp: personal hangouts display, if any

--

&display.hangouts hangouts command=
	[setq( l, v( d.maploc-len ))]

@@ .. header
	[u( .header, +hangouts[if( %1, /all )] )] %r
	[ansi( 
		n, space( add( 3, %ql )), 
		%vc, Name, 
		n, space( sub( 53, %ql )), 
		%vc, Info?, 
		n, %b%b, 
		%vc, Pop. 
	)]%r

@@ .. for each hangout ..
	[iter( 
		%0, 
		[setq( 0, rest( %i0, : ))]
		[setq( 1, get( v( d.data )/hangout-%q0 ))]
@@ .. map loc
		[ljust( 
			u( display.map-loc, elements( %q1, 3, ~ )), 
			add( %ql, 2 )
		)] 
@@ .. name
		[ljust( first( %q1, ~ ), sub( 46, %ql ) )] 
@@ .. dbref - if jump_ok or viewer is staff
		[ljust( 
			ifelse( 
				or( hasflag( %q0, jump_ok ), u( .isstaff, %# )), 
				%(%q0%), 
			), 
			11 
		)] 
@@ .. details?
		[ljust( 
			ifelse( 
				last( %q1, ~ ), 
				Y, 
			), 
			6 
		)]
@@ .. population
		[center( first( %i0, : ), 3 )] 

@@ .. night/day zone?
		[u( f.day-night-zone, %q0 )], 

		%b, 
		%r 
	)]%r
	[if( 
		t( setr( p, 
			u( 
				display.hangouts.personal.guts, 
				setr( h, 
					u( f.rank-hangouts.personal, %2, %1 )
				)
			)
		)), 
		[u( .divider )]%r
		%qp%r
	)]

	[u( .footer, [words( %0 %qh )] hangouts listed )]


================================================================================
== DISPLAY DETAIL ==============================================================

Display the detail of a specific hangout

                               Hangout: XXXXX
   Map Location: xxxx
   Info: xxxxxxxxxxxxxxxxxxxxxxxxxx <Day/Night>
 -----------------------------------------------------------------------------
   Room Name                                                            Pop.
   xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx (#xxxxxx)      999


0: Full name of hangout
1: Dbref of hangout
Returns: Prettified display of hangout

q0: Attrib contents for hangout
q1: Info part

--

&display.detail hangouts command=
	[setq( 0, u( v( d.data )/hangout-%1 ))]
@@ >> header
	[u( .header, +hangout %0 )] %r
@@ .. map loc
	%b [ansi( %vc, Map Loc: )] [extract( %q0, 3, 1, ~) ] %r
@@ .. info (if applicable)
	[ifelse( 
		setr( 1, last( %q0, ~ )), 
		[wrap( [ansi( %vc, Info: )] %q1, 74, left, %b%b )]%r, 
	)]
@@ .. end header
	[u( .divider )] %r
@@ >> rooms listing
@@ .. header
	[ansi( u%vc, %b Room Name, n, space( 61 ), u%vc, Pop.)]%r
@@ .. list rooms and populations
	[iter( 
		extract( %q0, 2, 1, ~ ), 
@@ .. .. room name
		%b [ljust( name( %i0 ), 53 )] 
@@ .. .. room dbref, where applicable
		[ljust( 
			ifelse( 
				cor( hasflag( %i0, jump_ok ), u( .isstaff, %# )), 
				%(%i0%), 
			), 
			16 
		)] 
@@ .. .. population
		[center( 
			words( filter( filter.people-in-room, lcon( %i0 ))), 
			3 
		)] 
@@ .. .. night/day
		[u( f.day-night-zone, %i0 )], 
		, %r
	)] %r
@@ >> footer
	[u( .footer )]


================================================================================
== DISPLAY PERSONAL HANGOUTS ===================================================

The only time we'll get this is a list of dbrefs from someone's &hangouts_list attribute. Otherwise works exactly like 'display.hangouts', above.


         1111111111          3333333333          5555555555          7777777777 
12345678901234567890123456789012345678901234567890123456789012345678901234567890
       Name                                                        Pop.
(xxxx) xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx (#xxxxxx) 999 
(xxxx) xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx (#xxxxxx) 999  <Night>
(xxxx) xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx (#xxxxxx) 999  <Day>


0: personal hangouts to show, from 
	u( f.rank-hangouts.personal, get( %#/_hangout.list ), 1 )
	<pop>:<dbref> <pop>:<dbref>, etc.

--

&display.hangouts.personal hangouts command=

	[setq( l, v( d.maploc-len ))]

@@ .. header
	[u( .header, +hangouts/personal )] %r
	[ansi( 
		n, space( add( 3, %ql )), 
		%vc, Name, 
		n, space( sub( 60, %ql )), 
		%vc, Pop. 
	)]%r

	[u( display.hangouts.personal.guts, %0 )]%r
	
	[u( .footer, [words( %0 )] personal hangouts listed )]


--------------------------------------------------------------------------------
-- Guts of the 'Display Personal Hangouts' -------------------------------------

Because 'display.hangouts' will also be calling this, we separate out the 
header/footer (above) with the line-by-line.

0: <pop>:<dbref> <pop>:<dbref>, etc.

ql: maploc length
qp: room population
qd: room dbref

--

&display.hangouts.personal.guts hangouts command=
	[setq( l, v( d.maploc-len ))]

@@ .. for each hangout ..
	[iter( 
		%0, 

		[setq( p, first( %i0, : ))]
		[setq( d, rest( %i0, : ))]
@@ .. map loc
		[ljust( 
			ucstr( u( display.map-loc, u( f.map-loc, %qd ))), 
			add( %ql, 2 )
		)] 
@@ .. name, unless the personal hangout conditions are not met
		[ljust( 
			if( 
				isint( %qp ), 
				name( %qd ), 
				<< cannot view this personal hangout >>
			), 
			sub( 53, %ql )
		)] 

@@ .. always show dbref
		[ljust( 
			%(%qd%), 
			11
		)]

@@ .. population, unless the personal hangout conditions are not met
		[center( 
			if( 
				isint( %qp ), 
				%qp, 
				@@(null)
			), 
			3 
		)] 

@@ .. night/day zone, unless the personal hangout conditions are not met
		[if( 
			%qo, 
			u( f.day-night-zone, %q0 ), 
			@@(null)
		)],  

		%b, 
		%r 
	)]


--------------------------------------------------------------------------------
-- Display Map Loc -------------------------------------------------------------

A bit of fussing to make sure the (loc) comes out looking right.

0: map loc

--

&display.map-loc hangouts command=
	strcat( 
		%(, 
		trim( center( %0, v( d.maploc-len ))), 
		%) 
	)



================================================================================
== DISPLAY HANGOUT/WHO =========================================================

The current drawback to this is that it doesn't work as a fully realized WHO.
Staff who would normally be able to see unfindable people can't.
Staff who would normally be able to see dark wizards can't.


0: output from f.find-named-hangout: <name>~<main dbref>
q1: attribute contents: <name>~<rooms list>~<map loc>~<notes>

qc: per room: connected people, minus dark wizards
qp: per room: findable people
qn: per room: number of visible people
qf: per room: number of findable people

--

&display.hangout.who hangouts command=
	[setq( 1, 
		get( [v( d.data )]/hangout-[after( %0, ~ )] )
	)]

	[u( .header, +hangout [before( %0, ~ )] )]%r

	%b [ansi( %vc, Map Loc: )] [elements( %q1, 3, ~ )]%r
	[u( .divider )]%r
	[ansi(  %vc, %b Room Name )]%r%r

@@ >> for each room ...
	[iter( elements( %q1, 2, ~ ), 
		[setq( c, filter( filter.people-in-room, lcon( %i0, CONNECT )))]
		[setq( p, filter( filter.findable-only, %qc ))]
		[setq( n, words( %qp ))]
		[setq( f, sub( words( %qc ), %qn ))]

		%b [ljust( name( %i0 ), 53 )]

@@ ... show dbref for staff and any j_ok rooms
		[if( 
			cor( 
				u( .isstaff, %# ), 
				hasflag( %i0, jump_ok )
			), 
			ljust( %(%i0%), 16 )
		)]%r
		%b %b 
		[ansi( hw, 
			case( 1, 
				hasflag( %i0, unfindable ), 
				%qn [u( .plural, %qn, person, people )] here, 

@@ ... list visible people and make note of unfindable people ...
				strcat(
					itemize( iter( %qp, name( %i0 ), , | ), | ), 
					if( %qf, 
						%,%bplus %qf [u( .plural, %qf, other, others )] 
					)
				)

			)
		)], 
		, %r 
	)]%r

	[u( .footer )]
