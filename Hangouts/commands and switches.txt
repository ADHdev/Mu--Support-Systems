================================================================================
== INITIAL COMMAND =============================================================

q0: Secured %0, can be safely clobbered after this

--

&c.hangouts hangouts command=
$+hangout*:@pemit %#=
	switch(
		setr( 0, trim( secure( %0 ))), 
@@ .. no entry (+hangout)
		, u( c.hangouts.default ), 
@@ .. a switch with/without argument (+hangout/<switch> [<arg>])
		/*, u( c.hangouts.switch, after( first( %q0 ), / ), rest( %q0 )), 
@@ .. specific (+hangout <person>)
		%b*, u( c.hangouts.specific, trim( %q0 )), 
@@ .. same, but for '+hangouts', with the 's'
		s, u( c.hangouts.default ), 
		s/*, u( c.hangouts.switch, after( first( %q0 ), / ), rest( %q0 )), 
		s%b*, u( c.hangouts.specific, trim( after( %q0, s ))), 
@@ .. else, it's garbage
		Error: Command is '+hangout%[s%]%[/<switch>%] %[<data>%]'
	)


================================================================================
== SWITCHES ====================================================================

q0: Partial-name-match the switch

--

&c.hangouts.switch hangouts command=

@@ .. do I know the switch?
	case( 1, 
@@ .. no switch passed
		strmatch( %0, @@( null )), 
		Null switches not allowed. Valid switches are: 
		[itemize( iter( sort( lattr( me/f_hangout/* )), lcstr( after( %i0, / ))))], 
@@ .. yes, I know it, hit it
		t( 
			setr( 0, grab( sort( lattr( me/f_hangout/* )), f_hangout/%0* ))
		), 
		u( %q0, %1 ), 
@@ .. else, no, I don't know it
		No such switch for +hangouts.  Valid switches are: 
		[itemize( iter( sort( lattr( me/f_hangout/* )), lcstr( after( %i0, / ))))]
	)


================================================================================
== DEFAULT (no arguments) ======================================================

q0: <people>:<main dbref> <people>:<main dbref>, ranked, filtered

--

&c.hangouts.default hangouts command=
	ifelse(
		t( setr( 0, u( f.rank-hangouts, 0 ))), 
		u( display.hangouts, %q0 ), 
		There are currently no people at any hangout locations. %r
		For a complete list of hangouts%, please use '+hangouts/all'.
	)



================================================================================
== SPECIFIC (list specific hangout) ============================================

0: Name to search for
q0: First match of sorted name~dbref

--

&c.hangouts.specific hangouts command=
	ifelse( 
		setr( 0, u( f.find-named-hangout, %0 )), 
		u( display.detailed, first( %q0, ~ ), rest( %q0, ~ )), 
		Error: Couldn't find hangout '%0'.
	)


================================================================================
== SWITCH: /ALL ================================================================

	+hangouts/all

Just like 'default', but lists all hangouts.

--

&f_hangout/all hangouts command=
	u( display.hangouts, u( f.rank-hangouts, 1 ), 1 )


================================================================================
== SWITCH: /ADD ================================================================

	+hangouts/add <dbref>=<name>/<map loc>[/<description>]

Adds a hangout, also edits details on it

q0: <dbref>
q1: <name>
q2: <map loc>
q3: <description>
qa: old attribute, if any
qz: temp register

--

&c.hangouts/add hangouts command=
[setq( 0, first( %0, = ))]
[setq( z, rest( %0, = ))]
[setq( a, u( v( d.data )/hangout-%q0 ))]
[setq( 1, if( setr( 1, elements( %qz, 1, / )), %q1, elements( %qa, 1, ~ )))]
[setq( 2, if( setr( 2, elements( %qz, 2, / )), %q2, elements( %qa, 3, ~ )))]
[setq( 3, if( setr( 3, elements( %qz, 3, / )), %q3, elements( %qa, 4, ~ )))]

[switch( 
	0, 
@@ Staff Only!
	u( .isstaff, %# ), 
	Error: Only game staff can add to or edit the hangouts list., 
@@ 
	isdbref( %q0 ), 
	Error: You must enter a valid main room dbref., 
@@ 
@@	isnum( %q2 ), 
@@	Error: Map locations must be numbers., 
@@ 
	lte( strlen( %q2 ), 5 ), 
	Error: Map locations are at most five characters long., 
@@ Else, must be okay!  (Re-)Add all entries
	[ifelse( 
		%qa, 
@@ .. editing
		[set(
			v( d.data ), 
			hangout-%q0:%q1~[elements( %qa, 2, ~ )]~%q2~%q3
		)]
		Changed existing entry%, use '+hangout %q1' to check., 
@@ .. adding
		[set( v(d.data), hangout-%q0:%q1~%q0~%q2~%q3 )]
		New hangouts entry added%, use '+hangout %q1' to check. 
	)] 
)]


================================================================================
== SWITCH /DELETE ==============================================================

	+hangout/delete <dbref>

Kill a hangout, by dbref only (for security) - ompletely removes all references to that locale.

q0: Hangout~attribute

--

&f_hangout/delete hangouts command=

ifelse(
	u( .isstaff, %# ), 
	ifelse( 
		setr( 0, u( v( d.data )/hangout-%0 )), 
@@ .. dbref okay
@@ .. .. display hangout you're about to delete
		[ansi( r, >> DELETING HANGOUT << )]%r
		[u( display.detail, first( %q0, ~ ), %0 )]%r
		[set( v( d.data ), hangout-%0: )]
		[ansi( r, >> HANGOUT DELETED << )]
	, 
@@ .. dbref not okay
		Error: There is no hangout based on that dbref. 
		Check +hangouts/all. 
	), 
	Error: Only game staff can delete from the hangouts list. 
)


================================================================================
== SWITCH /OOM =============================================================

	+hangouts/room <dbref|hangout name>=[!]<room dbref>

Add a room dbref to an existing hangout, or removes it from same.

0: <dbref|locale>=[!]<room dbref>
q0: Locale name/dbref as entered
q1: Actual locale name:dbref
q2: Actual dbref of room to add/remove
q3: Boolean: 1 if ! is used (delete room), 0 otherwise.

--

&f_hangout/room hangouts command=

[setq( 0, before( %0, = ))]
[setq( 2, after( %0, = ))]
[setq( 
	2, 
	ifelse( 
		setr( 3, not( comp( !, strtrunc( %q2, 1 )))), 
		right( %q2, dec( strlen( %q2 ))), 
		%q2
	)
)]
[ifelse( 
	isstaff( %# ), 
	ifelse(
		isdbref( %q0 ), 
@@ Dbref Stuff
		ifelse( 
			lattr( v( d.data )/*-%q0 ), 
@@ ... dbref okay: add/delete the room
			u( 
				f.addroom-%q3, 
				first( get( v( d.data )/hangout-%q0 ), ~ ), 
				%q0, 
				%q2 
			), 
@@ ... dbref not okay
			Error: There is no hangout based on that dbref. 
			Check +hangouts/all. 
		), 
@@ Non-Dbref (word-based) Stuff
		[setq( 1, u( f.find-named-hangout, %q0 ))]
		[ifelse( 
			%q1, 
@@ ... name okay: add/delete the room
			[u( f.addroom-%q3, before( %q1, ~ ), after( %q1, ~ ), %q2 )], 
@@ ... name not okay
			Error: There is no hangout based on that name. 
			Check +hangouts/all. 
		)]
	), 
	Error: Only game staff can add or remove rooms from a hangout. 
)]
