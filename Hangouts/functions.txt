================================================================================
== RANK HANGOUTS ===============================================================

Subsystem that lists pop:hangout for overall hangout list

0: 1 means "all", 0 (default) means "only those with people in it"
Returns: Sorted list in following format:
	<population>:<main dbref> <population>:<main dbref> 

--

&f.rank-hangouts hangouts parent=
revwords( sort( 
	ifelse( 
		%0, 
@@ 1: Give me all of it
		u( f.calculate-hangouts ), 
@@ 0: Give me only hangouts with people in them
		filter( 
			filter.hangouts-with-people, 
			u( f.calculate-hangout-pop )
		)
	), 
	n
))

--------------------------------------------------------------------------------
-- Calculate Hangout Population ------------------------------------------------

List all hangouts in the rank-hangouts format:

	<population>:<main dbref> <population>:<main dbref> 

--

&f.calculate-hangouts hangouts command=
	iter( 
		lattr(v(d.data)/hangout-*), 
		[u(f.people-in-one-hangout, ##)]:[rest(##, -)] 
	)


--------------------------------------------------------------------------------
-- People in One Hangout -------------------------------------------------------

Returns the total population of a single hangout

0: hangout~attribute~contents
returns: population across all rooms

--

&f.people-in-one-hangout hangouts parent=
	words( 
		iter( 
@@ .. get list of rooms in this hangout
			extract( u( v(d.data)/%0 ), 2, 1, ~ ), 
@@ .. get list of countable people in a room
			filter( filter.people-in-room, lcon( %i0 ))
		)
	)


================================================================================
== SPECIFIC HANGOUT ============================================================

Subsystem to list information about a specific hangout. Mainly the front end to &display.detail

0: partial name of hangout to find

--

&f.hangout-specific hangouts parent=
	[setq( 0, u(f.find-named-hangout, %0 ))]
	[ifelse( 
		%q0, 
		u( display.detail, first( %q0, ~ ), rest( %q0, ~ )), 
		Error: Couldn't find hangout '%0'. 
	)]


--------------------------------------------------------------------------------
-- Find Named Hangout ----------------------------------------------------------


0: Partial hangout name to match
returns: full name~dbref of first sorted match

--

&f.find-named-hangout hangouts parent=
grab( 
	sort( 
		iter( 
			lattr( v(d.data )/hangout-* ), 
			[first( u( v(d.data )/%i0 ), ~)]~[rest( %i0, - )], , | 
		), 
		|, | 
	), 
	%0*~*, | 
)



== ADDROOM ===

Add a room or delete a room

--------------------------------------------------------------------------------
-- Adding the room -------------------------------------------------------------

"0" means you really are adding a room

0: hangout name
1: main dbref
2: room dbref (possibly)
q0: Existing hangout attribute
q1: Current room list

--

&f_addroom-0 hangouts parent=

[setq( 0, get( v( d.data )/hangout-%1 ))]
[setq( 1, elements( %q0, 2, ~ ))]
[switch( 
	0, 
@@ Valid room?
	t( hastype( %2, room )), 
	Error: You must enter a valid room dbref to add., 
@@ Does the dbref exist?
	not( match( %q1, %2 )), 
	Error: Room already exists for that hangout., 
@@ Nope?  Then add that puppy!
	[set( 
		v( d.data ), 
@@ .. replace room list ( element 2 ) with the old list plus new room
		hangout-%1:[replace( %q0, 2, %q1 %2, ~ )]
	 )]
	Room %2 added to the hangout. Use '+hangout %0' to check.
 )]


--------------------------------------------------------------------------------
-- Removing the room -----------------------------------------------------------

"1" means you're removing the room

0: hangout name
1: main dbref
2: room dbref ( possibly )
q0: Existing hangout attribute
q1: Current room list
q2: Position of %2 in room list

--

&f_addroom-1 hangouts parent=

[setq( 0, get( v( d.data )/hangout-%1 ))]
[setq( 1, extract( %q0, 2, 1, ~ ))]
[switch( 
	0, 
@@ Valid room?
	t( hastype( %2, room )), 
	Error: You must enter a valid room dbref to remove., 
@@ Is it also the hangout's dbref?
	not( match( %1, %2 )), 
	Error: You can't delete the main room.,
@@ Does the dbref exist?
	setr( 2, match( %q1, %2 )), 
	Error: Room does not exist for that hangout., 
@@ Nope?  Then remove that puppy! ( But keep the list's order. )
	[set( 
		v( d.data ), 
		hangout-%1:
@@ .. replace room list ( element 2 ) with the old list minus old room
		[replace( %q0, 2, ldelete( %q1, %q2 ), ~ )]
	 )]
	Room %2 removed from the hangout. Use '+hangouts %0' to check.
 )]


================================================================================
== OTHER FUNCTIONS =============================================================


--------------------------------------------------------------------------------
-- Day/Night Zone --------------------------------------------------------------

Is this room a nightzone or a dayzone? That is, has it been set to always conform to a specific time of day?

NOBLEED (-): Night
NOACCENTS (~): Day

0: Room to check
returns: <night> for night zone and <day> for day zone

--

&f.day-night-zone hangouts parent=
	switch( 
		flags( %0 ), 
		*-*, %xb<Night>%xn, 
		*~*, %xy<Day>%xn
	)











-==--==--=-=-==-=--=-=-==-=-=--=-=-==-=-=-=-=--==-=-=-=-=-=-==--=-=-==-=-=-=--==
HELP: Basic Help

&help~commands~+hangouts #270=Finding People, Being Found~

[ljust(+hangouts, 23)] -- List hangouts with people in them
[ljust(+hangouts/all, 23)] -- List all hangouts
[ljust(+hangout <hangout name>, 23)] -- Look into a hangout

You can type the first part of the hangout name and the system will do its best to find your match.

The dbref of a room in a hangout will be visible if it is jump_ok or you are staff.

The population of a hangout or a room is listed regardless of the findability of the people or the room.  It will not list dark staff.

For this command, +hangout and +hangouts are synonymous in all uses.

---

&help~commands~+hangouts #270=Finding People, Being Found~[ljust(+hangouts, 23)] -- List hangouts with people in them %r[ljust(+hangouts/all, 23)] -- List all hangouts %r[ljust(+hangout <hangout name>, 23)] -- Look into a hangout %r %rYou can type the first part of the hangout name and the system will do its best to find your match. %r %rThe dbref of a room in a hangout will be visible if it is jump_ok or you are staff. %r %rThe population of a hangout or a room is listed regardless of the findability of the people or the room.  It will not list dark staff. %r %rFor this command, +hangout and +hangouts are synonymous in all uses.


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==--==--==-=--=-==--=-==--=-=-=-=-=-=
SHELP: How To Make This Work

&shelp~commands~+hangouts #270=Setting Up Hangouts~

Expands: +help +hangouts

+hangout/add <main dbref>=<hangout name>/<map loc>%[/<description>%]

<main dbref>: Each hangout relies upon a main room dbref to treat as the main room.  If the main dbref is jump_ok, the hangout is marked as jump_ok.  If the main dbref is a nightzone, the hangout is marked as a nightzone.

<hangout name>: The name as will appear in +hangouts.

<map loc>: A three-letter location of where the hangout can be found on the map.

<description>: A short description of the hangout, shown in +hangout <name>.

+hangout/add also allows you to edit a hangout.  If the <main dbref> already exists, the rest of the information you add will overwrite the existing hangout information.  This way, you can change a hangout's name, map location, or description.

WARNING: If you're using +hangout/add to edit, you must enter all the information or that information will be erased.
~
+hangout/delete <main dbref>

Completely removes a hangout and all attached rooms from the hangouts list.  The only way to change a hangout's <main dbref> is to delete it and add it with a new dbref, and re-add any attached rooms.

[ansi(c, repeat(-, 74))]

+hangout/addroom <main dbref|hangout name>=%[!%]<room dbref>

While the <main dbref> is always part of a hangout's room list, you can add other rooms to it with this command.

The optional ! symbol, meaning "not", is how you remove a room from this list.  You can't remove the <main dbref>.

e.g.:
 %b +hangout/add #666=#254
 %b +hangout/add devil's cafe=!#254

---

&shelp~commands~+hangouts #270=Setting Up Hangouts~>>> Expands: +help +hangouts <<< %r %r+hangout/add <main dbref>=<hangout name>/<map loc>%[/<description>%] %r %r<main dbref>: Each hangout relies upon a main room dbref to treat as the main room.  If the main dbref is jump_ok, the hangout is marked as jump_ok.  If the main dbref is a nightzone, the hangout is marked as a nightzone. %r %r<hangout name>: The name as will appear in +hangouts. %r %r<map loc>: A three-letter location of where the hangout can be found on the map. %r %r<description>: A short description of the hangout, shown in +hangout <name>. %r %r+hangout/add also allows you to edit a hangout. If the <main dbref> already exists, the rest of the information you add will overwrite the existing hangout information.  This way, you can change a hangout's name, map location, or description. %r %rWARNING: If you're using +hangout/add to edit, you must enter all the information or that information will be erased.~+hangout/delete <main dbref> %r %rCompletely removes a hangout and all attached rooms from the hangouts list.  The only way to change a hangout's <main dbref> is to delete it and add it with a new dbref, and re-add any attached rooms. %r %r[ansi(c, repeat(-, 74))]%r+hangout/addroom <main dbref|hangout name>=%[!%]<room dbref> %r %rWhile the <main dbref> is always part of a hangout's room list, you can add other rooms to it with this command. %r %rThe optional ! symbol, meaning "not", is how you remove a room from this list.  You can't remove the <main dbref>. %r %re.g.: %r %b +hangout/add #666=#254 %r %b +hangout/add devil's cafe=!#254